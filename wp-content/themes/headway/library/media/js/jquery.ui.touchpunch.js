/*!
 * jQuery UI Touch Punch 0.2.2 + patches
 *
 * Copyright 2011, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */
(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(d){var a=window.navigator.pointerEnabled||window.navigator.msPointerEnabled;d.support.touch=d.support.touch||((typeof Modernizr!=="undefined")?Modernizr.touch:("ontouchend" in document||"createTouch" in document||a));if(!d.support.touch&&!navigator.msPointerEnabled){return}var e=d.ui.mouse.prototype,g=e._mouseInit,c;function b(l){var j=window.pageXOffset,i=window.pageYOffset,h=l.clientX,k=l.clientY;if(l.pageY===0&&Math.floor(k)>Math.floor(l.pageY)||l.pageX===0&&Math.floor(h)>Math.floor(l.pageX)){h=h-j;k=k-i}else{if(k<(l.pageY-i)||h<(l.pageX-j)){h=l.pageX-j;k=l.pageY-i}}return{clientX:h,clientY:k}}function f(i,j){if((!a&&i.originalEvent.touches&&i.originalEvent.touches.length>1)||(a&&!i.isPrimary)){return}i.preventDefault();var h;if(a){h=i.originalEvent}else{if(i.originalEvent.changedTouches){h=i.originalEvent.changedTouches[0]}else{h=i}}simulatedEvent=document.createEvent("MouseEvents");coord=b(h);simulatedEvent.initMouseEvent(j,true,true,window,1,h.screenX,h.screenY,coord.clientX,coord.clientY,false,false,false,false,0,null);i.target.dispatchEvent(simulatedEvent)}e._touchStart=function(i){var h=this;if(c||(!a&&!h._mouseCapture(i.originalEvent.changedTouches[0]))){return}c=true;h._touchMoved=false;f(i,"mouseover");f(i,"mousemove");f(i,"mousedown")};e._touchMove=function(h){if(!c){return}this._touchMoved=true;f(h,"mousemove")};e._touchEnd=function(h){if(!c){return}f(h,"mouseup");f(h,"mouseout");if(!this._touchMoved){f(h,"click")}c=false};e._mouseInit=function(){var h=this;h.element.off("touchstart").off("touchmove").off("touchend");if(a){h.element.on("pointerDown",d.proxy(h,"_touchStart")).on("pointerMove",d.throttle(75,d.proxy(h,"_touchMove"))).on("pointerUp",d.proxy(h,"_touchEnd")).on("MSPointerDown",d.proxy(h,"_touchStart")).on("MSPointerMove",d.throttle(75,d.proxy(h,"_touchMove"))).on("MSPointerUp",d.proxy(h,"_touchEnd"))}else{h.element.on(navigator.msPointerEnabled?"MSPointerDown":"touchstart",d.proxy(h,"_touchStart")).on(navigator.msPointerEnabled?"MSPointerMove":"touchmove",d.throttle(75,d.proxy(h,"_touchMove"))).on(navigator.msPointerEnabled?"MSPointerUp":"touchend",d.proxy(h,"_touchEnd"));h.element.css({msTouchAction:"none"})}g.call(h)}}));